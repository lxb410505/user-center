<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hypersmart.usercenter.mapper.HouseMapper">
    <select id="list" resultType="java.util.Map" parameterType="java.util.Map">
        SELECT
        hs.id id,
        hs.sf_guid suGuid,
        hs.sap_id sapId,
        hs.wbs_code wbsCode,
        hs.house_code houseCode,
        hs.house_inner_name houseInnerName,
        hs.is_invented isInvented,
        hs.floor,
        hs.house_state houseState,
        property_type propertyType,
        actual_address actualAddress,
        measured_area measuredArea,
        predicted_area predictedArea,
        building_area buildingArea,
        fee_area feeArea,
        used_area usedArea,
        public_booth_area publicBoothArea,
        total_arrearage totalArrearage,
        start_date startDate,
        restore_original_date restoreOriginalDate,
        remark,
        reason,
        unit_id unitId,
        unit_code unitCode,
        building_id buildingId,
        divide_id divideId,
        area_code areaCode,
        hs.area_id areaId,
        area_name areaName,
        hs.city_id cityId,
        city_name cityName,
        city_code cityCode,
        hs.project_id projectId,
        building_name buildingName,
        divide_code divideCode,
        divide_name divideName,
        project_code procectCode,
        project_name projectName,
        contract_id contractId,
        contract_flag contractFlag,
        debit_enabled_flag debitEnabledFlag,
        corp_id corpId,
        batch_id batchId,
        property_fee propertyFee,
        other_fee otherFee,
        delivery_date deliveryDate,
        real_delivery_date realDeliveryDate,
        access_card_number accessCardNumber,
        purpose,
        renovation_type renovationType,
        source_from sourceFrom,
        emergency_contact_1 emergencyContact1,
        emergency_contact_phone_1 emergencyContactPhone1,
        emergency_contact_2 emergencyContact2,
        emergency_contact_phone_2 emergencyContactPhone2,
        emergency_contact_3 emergencyContact3,
        emergency_contact_phone_3 emergencyContactPhone3,
        hs.creation_date creationDate,
        hs.created_by createdBy,
        hs.updation_date updationDate,
        house_use houseUse,
        connect_address connectAddress,
        hs.updated_by updatedBy,
        hs.row_version rowVersion,
        hs.is_deleted isDeleted,
        hs.enabled_flag enabledFlag,
        org.name_ massifName,
        gbi.grid_name gridName,
        case
        when delivery_date <![CDATA[ <= ]]> CURDATE() and  delivery_date > date_add(CURDATE(), interval -6 month)
        then 'storming1'
        when delivery_date <![CDATA[ <= ]]> date_add(CURDATE(), interval -6 month) and  delivery_date > date_add(CURDATE(), interval -1 year)
        then 'storming2'
        when delivery_date <![CDATA[ <= ]]> date_add(CURDATE(), interval -1 year) and  delivery_date > date_add(CURDATE(), interval -2 year)
        then 'stable'
        when delivery_date <![CDATA[ <= ]]> date_add(CURDATE(), interval -2 year)
        then 'oldProprietor'
        else '其他'
        end as ownerStage
        FROM
        uc.house hs
        LEFT JOIN uc.grid_range gr ON gr.resource_id = hs.id
        LEFT JOIN uc.grid_basic_info gbi ON gr.grid_id = gbi.id
        LEFT JOIN uc.uc_org org ON gbi.staging_id = org.id_
        <where>
            <if test="whereSql">
                ${whereSql}
            </if>
        </where>
        group by hs.id
        <if test="orderSql">
            order by ${orderSql}
        </if>
    </select>



    <select id="selectGridBuilding" resultType="java.util.Map" >
        select
        hs.building_id as buildingId,
        hs.building_name as buildingName
        from   uc.house  hs
        left join uc.grid_range  gr on gr.resource_id = hs.id
        left join uc.grid_basic_info gbi on gr.grid_id = gbi.id
        where gbi.id = #{id}
        group by  hs.building_id
    </select>


    <select id="selectBuildingUnit" resultType="java.util.Map" >
        select
        hs.unit_id as unitId,
        hs.unit_code as unitName
        from   uc.house  hs
        where hs.building_id = #{id}
        group by  hs.unit_id
    </select>
    <select id="selectHouseExcelInfo" resultType="com.hypersmart.usercenter.dto.HouseExcelInfoDTO">
        SELECT
	hs.id houseId,
	hs.house_inner_name houseInnerName,
	property_type houseType,
	remark remarks,
	area_name areaName,
	city_name cityName,
	project_name projectName,
	delivery_date deliveryDate,
	real_delivery_date realDeliveryDate,
	renovation_type renovationType,
	house_use houseUse,
	org.name_ massifName,
	gbi.grid_name gridName,
	um.FULLNAME_ ucMemberName,
  IF( um.GRADE_ = 'internal_staff', '是', '否' ) isOwnStaff,
	um.MOBILE_ phone1
FROM
	uc.house hs
	LEFT JOIN uc.grid_range gr ON gr.resource_id = hs.id
	LEFT JOIN uc.grid_basic_info gbi ON gr.grid_id = gbi.id
	LEFT JOIN uc.uc_org org ON gbi.staging_id = org.id_
	LEFT JOIN member.user_house_ref uhf ON hs.id = uhf.HOUSE_ID_

	LEFT JOIN member.uc_member um ON uhf.MEMBER_ID_ = um.ID_
	where
	uhf.RELATION_ = 0
	and uhf.IS_DELE_='0'
	and gr.is_deleted=0
	and gr.enabled_flag=1
	and gbi.is_deleted=0
	and gbi.enabled_flag=1
    and org.IS_DELE_='0'
	and hs.is_deleted=0
	and hs.enabled_flag=1
	<if test="whereSql">
      and  ${whereSql}
    </if>
    group by hs.id
    <if test="orderSql">
        order by ${orderSql}
    </if>

    </select>
    <select id="selectUcMemberRelatio" resultType="com.hypersmart.usercenter.dto.ClientRelationDTO">
        select
        uhf.id_ as id,
        uhf.MEMBER_ID_ as clientId,
        uhf.HOUSE_ID_ as houseId,
        um.FULLNAME_ as fullname,
        um.ID_CARD_ as idCard,
        um.MOBILE_ as mobile,
        um.SEX_ as sex,
        um.GRADE_ as grade
        from
        member.user_house_ref uhf
        LEFT JOIN member.uc_member um ON uhf.MEMBER_ID_ = um.ID_
        where
        uhf.IS_DELE_='0'
        <if test="whereSql">
            and  ${whereSql}
        </if>
    </select>

</mapper>