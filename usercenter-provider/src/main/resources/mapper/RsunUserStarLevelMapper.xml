<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hypersmart.usercenter.mapper.RsunUserStarLevellMapper">
    
    <select id="queryYear" resultType="java.util.Map" parameterType="java.util.Map">


        <!--<![CDATA[   select a.*,c .name_ from uc.rsun_user_star_level a-->
        <!--left join uc_org_user b on b.user_Id_ = a.uc_user_id-->
        <!--left join uc_org c on c.id_= b.org_ID_-->
        <!--WHERE-->
        <!--DATE_FORMAT(a.level_sy_time, '%Y-%m') = #{time}-->
        <!--and c.name_ <> '']]>-->

        <!--group by a.uc_user_id-->
        <!--order by a.total_coin-->

        select * from uc.user_gold_year
        order by sort

    </select>

    <select id="queryMonth" resultType="java.util.Map" parameterType="java.util.Map">

        select * from uc.user_gold_month where year= #{year} and month = #{month}
        order by sort

    </select>

    <select id="queryYear4job" resultType="java.util.Map" >


        <![CDATA[   select a.*,d.fullname_ from uc.rsun_user_star_level a

      left join uc_user d on d.id_ = a.uc_user_id
        ]]>

        group by a.uc_user_id
        order by a.total_coin desc

    </select>
    <select id="queryMonth4job" resultType="java.util.Map" parameterType="java.lang.String" >
        <![CDATA[
   select sum(gcoin_val) s ,a.uc_user_id ,d.fullname_  fullname_ from uc.rsun_jb_hi_reward a

        left join uc_user d on d.id_ = a.uc_user_id

        where
        (DATE_FORMAT(a.jb_jl_time, '%Y-%m') =#{s} and (jb_jl_type is null or jb_jl_type ='' ))
        or
        (DATE_FORMAT(a.jb_originnal_time, '%Y-%m') =#{s}  and jb_jl_type ='appeal')
        group by uc_user_id
        order by  s desc
     ]]>



    </select>
    <insert id="insertYear" parameterType="java.util.Map" >
        insert into uc.user_gold_year  values (#{id},#{sort},#{user_name},#{project},#{gold},#{year},#{sort_name})

    </insert>
    <insert id="insertMonth" parameterType="java.util.Map" >
        insert into uc.user_gold_month  values (#{id},#{sort},#{user_name},#{project},#{gold},#{year},#{month},#{sort_name})

    </insert>
    <delete id="deleteGoldYear">
        delete from user_gold_year;
    </delete>
    <delete id="deleteGoldMonth" parameterType="java.util.Map">
        delete from user_gold_month where year=#{year} and month=#{month};
    </delete>




    <select id="queryYear4Badge" resultType="java.util.Map" parameterType="java.util.Map">


        <!--<![CDATA[   select a.*,c .name_ from uc.rsun_user_star_level a-->
        <!--left join uc_org_user b on b.user_Id_ = a.uc_user_id-->
        <!--left join uc_org c on c.id_= b.org_ID_-->
        <!--WHERE-->
        <!--DATE_FORMAT(a.level_sy_time, '%Y-%m') = #{time}-->
        <!--and c.name_ <> '']]>-->

        <!--group by a.uc_user_id-->
        <!--order by a.total_coin-->

        select * from uc.user_badge_year
        order by sort

    </select>

    <select id="queryMonth4Badge" resultType="java.util.Map" parameterType="java.util.Map">

        select * from uc.user_Badge_month where year= #{year} and month = #{month}

        order by sort

    </select>

    <select id="queryYear4job4Badge" resultType="java.util.Map" >


        <![CDATA[   select a.*,d.fullname_ from uc.rsun_user_star_level a

      left join uc_user d on d.id_ = a.uc_user_id
        ]]>

        group by a.uc_user_id
        order by a.xz_num desc

    </select>
    <select id="queryMonth4job4Badge" resultType="java.util.Map" parameterType="java.lang.String" >

        <![CDATA[

                select sum(gcoin_val) s ,a.uc_user_id ,d.fullname_  fullname_ from uc.rsun_Badge_hi_reward a

                left join uc_user d on d.id_ = a.uc_user_id
          where
                DATE_FORMAT(a.jb_jl_time, '%Y-%m') =#{s}

                group by uc_user_id
                order by  s desc
        ]]>

    </select>
    <insert id="insertYear4Badge" parameterType="java.util.Map" >
        insert into uc.user_Badge_year  values (#{id},#{sort},#{user_name},#{project},#{gold},#{year},#{sort_name})

    </insert>
    <insert id="insertMonth4Badge" parameterType="java.util.Map" >
        insert into uc.user_Badge_month  values (#{id},#{sort},#{user_name},#{project},#{gold},#{year},#{month},#{sort_name})

    </insert>
    <delete id="deleteGoldYear4Badge">
        delete from user_Badge_year;
    </delete>
    <delete id="deleteGoldMonth4Badge">
--         delete from user_Badge_month   where DATE_FORMAT(new , '%Y-%m') ;
        delete from user_Badge_month   where year =DATE_FORMAT(now(), '%Y')
                and month =DATE_FORMAT(now(), '%m')
    </delete>

<insert id="insertGoldRecord" parameterType="java.util.Map">
    insert into uc.gold_badge_task_record values (

     #{id},
     #{row_time},
     #{state},
     #{message},
     #{type},
     #{end_time}
     )
</insert>

    <update id ="updateSingleRecord" parameterType="java.util.Map">
        update uc.gold_badge_task_record set state= #{state},message= #{message}, end_time=#{end_time}
        where id = #{id}
    </update>

    <insert id="insertBadgeHistory" parameterType="java.util.Map">
      insert into `uc`.`rsun_badge_hi_reward` values (
      #{uc_user_id} ,
      #{jb_jl_reason} ,
      #{jb_jl_time} ,
      #{gcoin_val} ,
      #{jb_originnal_time}

      );
    </insert>


    <select id="get4Part" parameterType="java.util.Map" resultType="com.hypersmart.usercenter.dto.GoldInfo">

        SELECT (@rowNO := @rowNo+1) AS sort,a.*   from(select sum(gcoin_val) gold ,


          a.uc_user_id ,d.fullname_  userName
--         ,g.name_ project
from uc.rsun_jb_hi_reward a

        left join uc.uc_user d on d.id_ = a.uc_user_id
		left join bpm.ext_customer_repair b on b.bx_code  = a.gd_code
--         left join uc.uc_org_user c on c.USER_ID_ = d.id_
--         left JOIN  uc.uc_org g on  g.id_ = c.ORG_ID_
--         where
--         c.IS_DELE_=0
--         and g.GRADE_ ='ORG_XiangMu' and g.IS_DELE_ = 0
--   and
        where
   (     (
   (a.jb_jl_type is null or a. jb_jl_type ='' )
)
        or
        ( a.jb_jl_type ='appeal')
	)

        <if test="list != null and list.size() > 0">
            and  b.bx_dk_id  in  (

            select a.id_ from uc.uc_org a left join uc.uc_org b on b.id_ = a.parent_id_ where b.code_
            in  <foreach collection="list" item="userId" open="(" close=")" separator=",">
            #{userId}
        </foreach>
            )

        </if>

     <if test="time !=null ">
         and (
         DATE_FORMAT(a.jb_jl_time, '%Y-%m') like CONCAT('%',#{time},'%') or DATE_FORMAT(a.jb_originnal_time, '%Y-%m') like CONCAT('%',#{time},'%')

         )

     </if>

        group by a.uc_user_id) a,(SELECT @rowNO :=0) b ORDER BY a.gold DESC
    </select>
</mapper>