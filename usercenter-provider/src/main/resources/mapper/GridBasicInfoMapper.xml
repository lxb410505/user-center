<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hypersmart.usercenter.mapper.GridBasicInfoMapper">
    <resultMap id="DtoResultMap" type="com.hypersmart.usercenter.dto.GridBasicInfoDTO">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="grid_code" jdbcType="VARCHAR" property="gridCode" />
        <result column="grid_name" jdbcType="VARCHAR" property="gridName" />
        <result column="grid_type" jdbcType="VARCHAR" property="gridType" />
        <result column="grid_range" jdbcType="VARCHAR" property="gridRange" />
        <result column="grid_remark" jdbcType="VARCHAR" property="gridRemark" />
        <result column="area_id" jdbcType="VARCHAR" property="areaId" />
        <result column="city_id" jdbcType="VARCHAR" property="cityId" />
        <result column="project_id" jdbcType="VARCHAR" property="projectId" />
        <result column="massif_id" jdbcType="VARCHAR" property="massifId" />
        <result column="staging_id" jdbcType="VARCHAR" property="stagingId" />
        <result column="housekeeper_id" jdbcType="VARCHAR" property="housekeeperId" />
        <result column="update_times" jdbcType="VARCHAR" property="updateTimes" />
        <result column="format_attribute" jdbcType="VARCHAR" property="formatAttribute" />
        <result column="creation_date" jdbcType="TIMESTAMP" property="creationDate" />
        <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
        <result column="enabled_flag" jdbcType="TINYINT" property="enabledFlag" />
    </resultMap>

    <resultMap id="SimpleDTOMap" type="com.hypersmart.usercenter.dto.GridBasicInfoSimpleDTO">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="grid_name" jdbcType="VARCHAR" property="gridName" />
        <result column="staging_id" jdbcType="VARCHAR" property="stagingId" />
        <result column="housekeeper_id" jdbcType="VARCHAR" property="housekeeperId" />
        <result column="grid_type" jdbcType="VARCHAR" property="gridType" />
        <result column="grid_id" jdbcType="VARCHAR" property="gridId" />

    </resultMap>
    <sql id="BaseTable">
    grid_basic_info
    </sql>

    <select id="getGridBasicInfoByHouseKeeperIds" resultMap="SimpleDTOMap" >
        SELECT
        a.id,
        a.grid_name,
        a.staging_id,
        a.housekeeper_id,
        a.grid_type,
        a.grid_id
        FROM
        (
        SELECT * from
        (
        select
        t.id AS id,
        s.service_grid_name AS grid_name,
        t.housekeeper_id AS housekeeper_id,
        s.staging_id AS staging_id,
        s.creation_date AS creation_date,
        t.grid_type AS grid_type,
        s.service_grid_id AS grid_id
        FROM
        stage_servicegird_ref s LEFT JOIN grid_basic_info t
        ON t.staging_id = s.staging_id and t.grid_type='service_center_grid'
        where
        <foreach collection="houseKeeperBO" index="index" item="houseKeeper" open="(" separator="or" close=")">
            (t.housekeeper_id =#{houseKeeper.houseKeeperId} and t.staging_id = #{houseKeeper.divideId})
        </foreach>
        and s.is_deleted = 0
        and s.enabled_flag = 1
        and
        t.is_deleted = 0
        and t.enabled_flag = 1
        UNION
        select
        t.id AS id,
        t.grid_name AS grid_name,
        t.housekeeper_id AS housekeeper_id,
        t.staging_id AS staging_id,
        t.creation_date AS creation_date,
        t.grid_type AS grid_type,
        t.id AS grid_id
        from grid_basic_info t
        where
        <foreach collection="houseKeeperBO" index="index" item="houseKeeper" open="(" separator="or" close=")">
            (t.housekeeper_id =#{houseKeeper.houseKeeperId} and t.staging_id = #{houseKeeper.divideId})
        </foreach>
        and
        t.is_deleted = 0
        and t.enabled_flag = 1
        AND t.grid_type!='service_center_grid'
        ) as g
        ) a
        LEFT JOIN (
        SELECT
        gr.grid_id,
        gr.approval_status AS approvalStatus,
        gr.proc_inst_Id AS procInstId
        FROM
        grid_approval_record gr
        WHERE
        gr.create_date = (
        SELECT
        max(create_date)
        FROM
        grid_approval_record
        WHERE
         grid_id = gr.grid_id
        limit 1
        )
        ) r ON r.grid_id = a.grid_id
        where (r.approvalStatus=2 or r.approvalStatus is null)
        order by a.creation_date desc
    </select>

    <select id="quertList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        t.*, r.procInstId,
        r.approvalStatus,
        r.approvalType
        FROM
        (
        SELECT
        g.*,
        (
        SELECT
        org.NAME_
        FROM
        uc_org org
        WHERE
        ID_ = g.areaId
        ) AS areaName,
        (
        SELECT
        org.NAME_
        FROM
        uc_org org
        WHERE
        ID_ = g.projectId
        ) AS projectName,
        (
        SELECT
        org.NAME_
        FROM
        uc_org org
        WHERE
        ID_ = g.cityId
        ) AS cityName,
        (
        SELECT
        org.NAME_
        FROM
        uc_org org
        WHERE
        ID_ = g.stagingId
        ) AS stagingName,
        k.fullName AS housekeeperName
        FROM
        (
        SELECT * from
        (
        select
        t.id AS id,
        t.grid_range AS gridRange,
        s.service_grid_name AS gridName,
        t.grid_type AS gridType,
        s.service_grid_code AS gridCode,
        case s.enabled_flag
        when 1 then t.grid_remark
        else NULL
        end
        AS gridRemark,
        t.area_id AS areaId,
        t.project_id AS projectId,
        t.city_id AS cityId,
        s.staging_id AS stagingId,
        s.staging_id AS massifId,
        t.staging_id AS divideId,
        case s.enabled_flag
        when 1 then t.housekeeper_id
        else NULL
        end
        AS housekeeperId,
        t.format_attribute AS formatAttribute,
        t.second_format_attribute AS secondFormatAttribute,
        t.third_format_attribute AS thirdFormatAttribute,
        concat('', s.enabled_flag, '') AS enabledFlag,
        concat('', s.enabled_flag, '') AS enabled_flag,
        t.is_deleted AS isDeleted,
        t.creation_date AS creationDate,
        s.id AS serviceGridId,
        s.service_grid_id AS gridId
        FROM
        stage_servicegird_ref s LEFT JOIN grid_basic_info t
        ON t.staging_id = s.staging_id and t.grid_type='service_center_grid'
        where 1=1
        <if test="!isIn">
          and   t.staging_id =#{massifId}
        </if>
        <if test="isIn">
         and   t.staging_id in
            <foreach collection="massifId" item="dkId" open="(" separator=","  close=")" >
                #{dkId}
            </foreach>
        </if>
        and s.is_deleted = 0
        and
        t.is_deleted = 0
        UNION
        select
        t.id AS id,
        t.grid_range AS gridRange,
        t.grid_name AS gridName,
        t.grid_type AS gridType,
        t.grid_code AS gridCode,
        t.grid_remark AS gridRemark,
        t.area_id AS areaId,
        t.project_id AS projectId,
        t.city_id AS cityId,
        t.staging_id AS stagingId,
        t.staging_id AS massifId,
        t.staging_id AS divideId,
        t.housekeeper_id AS housekeeperId,
        t.format_attribute AS formatAttribute,
        t.second_format_attribute AS secondFormatAttribute,
        t.third_format_attribute AS thirdFormatAttribute,
        concat('', t.enabled_flag, '') AS enabledFlag,
        concat('', t.enabled_flag, '') AS enabled_flag,
        t.is_deleted AS isDeleted,
        t.creation_date AS creationDate,
        null AS serviceGridId,
        t.id AS gridId
        from grid_basic_info t
        where 1=1
        <if test="!isIn">
            and   t.staging_id =#{massifId}
        </if>
        <if test="isIn">
            and  t.staging_id in
            <foreach collection="massifId" item="dkId" open="(" separator=","  close=")" >
                #{dkId}
            </foreach>
        </if>
        AND t.grid_type!='service_center_grid'
        AND t.is_deleted = 0
        ) as a
        ) g
        LEFT JOIN (
        SELECT
        u.ID_ AS houseKeeperId,
        uou.ID_ AS id,
        u.FULLNAME_ AS fullName,
        u.MOBILE_ AS mobile,
        u.ACCOUNT_ AS account,
        post.ID_ AS `postId`,
        post.POS_NAME_ AS posName,
        org.NAME_ AS divideName,
        org.ID_ AS divideId
        FROM
        uc_user u
        JOIN uc_org_user uou ON u.ID_ = uou.USER_ID_
        JOIN uc_org org ON uou.ORG_ID_ = org.ID_
        JOIN uc_org_post post ON uou.POS_ID_ = post.ID_
        JOIN uc_org_job uoj ON post.JOB_ID_ = uoj.ID_
        JOIN uc_demension dem ON org.DEM_ID_ = dem.ID_
        WHERE
        uoj.CODE_ = 'guanjia'
        AND dem.CODE_ = 'smsf'
        AND org.GRADE_ = 'ORG_DiKuai'
        AND u.IS_DELE_ = 0
        AND uou.IS_DELE_ = 0
        AND org.IS_DELE_ = 0
        AND post.IS_DELE_ = 0
        AND uoj.IS_DELE_ = 0
        AND dem.IS_DELE_ = 0
        ) AS k ON  g.housekeeperId = k.houseKeeperId  and g.stagingId = k.divideId
        ) AS t
        LEFT JOIN (
        SELECT
        gr.grid_id,
        gr.approval_status AS approvalStatus,
        gr.proc_inst_Id AS procInstId,
        gr.approval_type AS approvalType
        FROM
        grid_approval_record gr
        WHERE
        gr.create_date = (
        <choose>
            <when test="enabledFlag!=null">
                SELECT max(create_date)
                FROM
                grid_approval_record
                WHERE
                grid_id = gr.grid_id
                and approval_type='newGrid'
                limit 1
            </when>
            <otherwise>
                SELECT max(create_date)
                FROM
                grid_approval_record
                WHERE
                grid_id = gr.grid_id
                limit 1
            </otherwise>
        </choose>
        )
        ) r ON r.grid_id = t.gridId
        <where>
            <if test="whereSql!=null">
                ${whereSql}
                <if test="enabledFlag!=null">
                    and (approvalStatus is null or approvalStatus =2)
                </if>
            </if>
        </where>
        GROUP BY t.gridId
        <if test="orderBySql!=null">
            ORDER BY ${orderBySql}
        </if>
    </select>

    <select id="queryAssociateList" parameterType="java.util.Map" resultType="java.util.Map">
        SELECT
        t.*, r.procInstId,
        r.approvalStatus
        FROM
        (
        SELECT
        g.*,
        (
        SELECT
        org.NAME_
        FROM
        uc_org org
        WHERE
        ID_ = g.areaId
        ) AS areaName,
        (
        SELECT
        org.NAME_
        FROM
        uc_org org
        WHERE
        ID_ = g.projectId
        ) AS projectName,
        (
        SELECT
        org.NAME_
        FROM
        uc_org org
        WHERE
        ID_ = g.cityId
        ) AS cityName,
        (
        SELECT
        org.NAME_
        FROM
        uc_org org
        WHERE
        ID_ = g.stagingId
        ) AS stagingName,
        k.fullName AS housekeeperName
        FROM
        (
        SELECT * from
        (
        select
        t.id AS id,
        t.grid_range AS gridRange,
        s.service_grid_name  AS gridName,
        t.grid_type AS gridType,
        s.service_grid_code AS gridCode,
        t.grid_remark AS gridRemark,
        null AS areaId,
        null AS projectId,
        null AS cityId,
        s.staging_id AS stagingId,
        t.staging_id AS divideId,
        t.housekeeper_id AS housekeeperId,
        t.format_attribute AS formatAttribute,
        t.second_format_attribute AS secondFormatAttribute,
        t.third_format_attribute AS thirdFormatAttribute,
        concat('', s.enabled_flag, '') AS enabledFlag,
        t.is_deleted AS isDeleted,
        t.creation_date AS creationDate,
        s.service_grid_id AS gridId
        FROM
        stage_servicegird_ref s LEFT JOIN grid_basic_info t
        ON t.staging_id = s.staging_id and t.grid_type='service_center_grid'
        where
        t.staging_id in
        <foreach collection="massifId" item="dkId" open="(" separator=","  close=")" >
            #{dkId}
        </foreach>
        AND  s.is_deleted = 0
        AND s.enabled_flag = 1
        and
        t.is_deleted = 0
        AND t.enabled_flag = 1
        UNION
        select
        t.id AS id,
        t.grid_range AS gridRange,
        t.grid_name AS gridName,
        t.grid_type AS gridType,
        t.grid_code AS gridCode,
        t.grid_remark AS gridRemark,
        t.area_id AS areaId,
        t.project_id AS projectId,
        t.city_id AS cityId,
        t.staging_id AS stagingId,
        t.staging_id AS divideId,
        t.housekeeper_id AS housekeeperId,
        t.format_attribute AS formatAttribute,
        t.second_format_attribute AS secondFormatAttribute,
        t.third_format_attribute AS thirdFormatAttribute,
        concat('', t.enabled_flag, '') AS enabledFlag,
        t.is_deleted AS isDeleted,
        t.creation_date AS creationDate,
        t.id AS gridId
        from grid_basic_info t
        where
        t.staging_id in
        <foreach collection="massifId" item="dkId" open="(" separator=","  close=")" >
            #{dkId}
        </foreach>
        AND  t.grid_type !='service_center_grid'
        AND t.is_deleted = 0
        AND t.enabled_flag = 1
        ) as a
        ) g LEFT JOIN (
        SELECT
        u.ID_ AS houseKeeperId,
        uou.ID_ AS id,
        u.FULLNAME_ AS fullName,
        u.MOBILE_ AS mobile,
        u.ACCOUNT_ AS account,
        post.ID_ AS `postId`,
        post.POS_NAME_ AS posName,
        org.NAME_ AS divideName,
        org.ID_ AS divideId
        FROM
        uc_user u
        JOIN uc_org_user uou ON u.ID_ = uou.USER_ID_
        JOIN uc_org org ON uou.ORG_ID_ = org.ID_
        JOIN uc_org_post post ON uou.POS_ID_ = post.ID_
        JOIN uc_org_job uoj ON post.JOB_ID_ = uoj.ID_
        JOIN uc_demension dem ON org.DEM_ID_ = dem.ID_
        WHERE
        uoj.CODE_ = 'guanjia'
        AND dem.CODE_ = 'smsf'
        AND org.GRADE_ = 'ORG_DiKuai'
        and u.IS_DELE_ = 0 and u.STATUS_ = 1 and uou.IS_DELE_ = 0 and org.IS_DELE_ = 0 and post.IS_DELE_ = 0 and uoj.IS_DELE_ = 0 and dem.IS_DELE_ = 0
        ) as k on g.housekeeperId = k.houseKeeperId  and g.stagingId = k.divideId
        ) as t
        LEFT JOIN (
        SELECT
        gr.grid_id,
        gr.approval_status AS approvalStatus,
        gr.proc_inst_Id AS procInstId,
        gr.approval_type AS approvalType
        FROM
        grid_approval_record gr
        WHERE
        gr.create_date = ( SELECT max( create_date ) FROM grid_approval_record WHERE grid_id = gr.grid_id
        limit 1)
        ) r ON r.grid_id = t.gridId
        <where>
            <if test="whereSql!=null">
                ${whereSql}
            </if>
            and (
              (approvalType='newGrid' and (approvalStatus is null or approvalStatus =2 ))
              or
              (approvalType!='newGrid'and (approvalStatus is null or approvalStatus =2 or approvalStatus =3))
              or
              ( approvalType is null)
            )
        </where>
        GROUP BY t.id
        <if test="orderBySql!=null">
            ORDER BY ${orderBySql}
        </if>
    </select>

    <select id="getGridById" parameterType="java.lang.String" resultType="java.util.Map">
        select DISTINCT g.*,
        k.fullName as housekeeperName
        from
         (
        select
        g.id as id,
        g.grid_range as gridRange,
        s.service_grid_name as gridName,
        g.grid_type as gridType,
        s.service_grid_code as gridCode,
        g.grid_remark as gridRemark,
        g.area_id as areaId,
        g.project_id as projectId,
        g.city_id as cityId,
        g.staging_id as stagingId,
        g.staging_id as divideId,
        g.housekeeper_id as housekeeperId,
        g.format_attribute as formatAttribute,
        g.second_format_attribute as secondFormatAttribute,
        g.third_format_attribute as thirdFormatAttribute,
        concat('',g.enabled_flag,'') as enabledFlag,
        (select org.NAME_ from uc_org org where ID_ = g.area_id) as areaName,
        (select org.NAME_ from uc_org org where ID_ = g.project_id) as projectName,
        (select org.NAME_ from uc_org org where ID_ = g.city_id) as cityName,
        (select org.NAME_ from uc_org org where ID_ = g.staging_id) as stagingName,
        s.service_grid_id AS serviceGridId
        FROM
        stage_servicegird_ref s LEFT JOIN grid_basic_info g
        ON g.staging_id = s.staging_id and g.grid_type='service_center_grid'
        where
        s.service_grid_id =#{id}
        and s.staging_id=#{stagingId}
        UNION
        select
        g.id as id,
        g.grid_range as gridRange,
        g.grid_name as gridName,
        g.grid_type as gridType,
        g.grid_code as gridCode,
        g.grid_remark as gridRemark,
        g.area_id as areaId,
        g.project_id as projectId,
        g.city_id as cityId,
        g.staging_id as stagingId,
        g.staging_id as divideId,
        g.housekeeper_id as housekeeperId,
        g.format_attribute as formatAttribute,
        g.second_format_attribute as secondFormatAttribute,
        g.third_format_attribute as thirdFormatAttribute,
        concat('',g.enabled_flag,'') as enabledFlag,
        (select org.NAME_ from uc_org org where ID_ = g.area_id) as areaName,
        (select org.NAME_ from uc_org org where ID_ = g.project_id) as projectName,
        (select org.NAME_ from uc_org org where ID_ = g.city_id) as cityName,
        (select org.NAME_ from uc_org org where ID_ = g.staging_id) as stagingName,
        g.id AS serviceGridId
        from grid_basic_info g
        where g.id =#{id}
        AND g.grid_type !='service_center_grid'
        ) as g LEFT JOIN (SELECT
        u.ID_ AS houseKeeperId,
        uou.ID_ AS id,
        u.FULLNAME_ AS fullName,
        u.MOBILE_ AS mobile,
        u.ACCOUNT_ AS account,
        post.ID_ AS `postId`,
        post.POS_NAME_ AS posName,
        org.NAME_ AS divideName,
        org.ID_ AS divideId
        FROM
        uc_user u
        JOIN uc_org_user uou ON u.ID_ = uou.USER_ID_
        JOIN uc_org org ON uou.ORG_ID_ = org.ID_
        JOIN uc_org_post post ON uou.POS_ID_ = post.ID_
        JOIN uc_org_job uoj ON post.JOB_ID_ = uoj.ID_
        JOIN uc_demension dem ON org.DEM_ID_ = dem.ID_
        WHERE
        uoj.CODE_ = 'guanjia'
        AND dem.CODE_ = 'smsf'
        AND org.GRADE_ = 'ORG_DiKuai'
        and u.IS_DELE_ = 0 and u.STATUS_ = 1 and uou.IS_DELE_ = 0 and org.IS_DELE_ = 0 and post.IS_DELE_ = 0 and uoj.IS_DELE_ = 0 and dem.IS_DELE_ = 0
        ) as k on g.stagingId = k.divideId and g.housekeeperId = k.houseKeeperId
    </select>

    <update id="disableGridInfo" parameterType="com.hypersmart.usercenter.bo.GridBasicInfoBO">
        update grid_basic_info
        set enabled_flag = 0, grid_range = null, update_times = update_times + 1, updated_by = #{updatedBy}, updation_date = now()
        where id in
        <foreach collection="ids" index="index" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </update>

    <update id="deleteGridInfo" parameterType="com.hypersmart.usercenter.bo.GridBasicInfoBO">
        update grid_basic_info
        set is_deleted = 1, grid_range = null, update_times = update_times + 1, updated_by = #{updatedBy}
        where id in
        <foreach collection="ids" index="index" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </update>

    <select id="getByGridRange" parameterType="java.lang.String" resultType="com.hypersmart.usercenter.model.GridBasicInfo">
        select 	id,
        grid_code as gridCode,
        grid_name AS gridName,
        grid_type as gridType,
        grid_range as gridRange,
        grid_remark as gridRemark,
        area_id as areaId,
        project_id as projectId,
        massif_id as massifId,
        staging_id as stagingId,
        city_id as cityId,
        housekeeper_id as housekeeperId,
        update_times as updateTimes,
        format_attribute as formatAttribute,
        second_format_attribute as secondFormatAttribute,
        third_format_attribute as thirdFormatAttribute,
        creation_date as creationDate,
        created_by as createdBy,
        updation_date as updationDate,
        updated_by as updatedBy,
        row_time as rowTime,
        row_version as rowVersion,
        tenant_id as tenantId,
        enabled_flag as enabledFlag,
        is_deleted as isDeleted
        from
        grid_basic_info
        <where>
            is_deleted = '0'
            <if test="gridRange!=null and gridRange!=''">
                AND grid_range LIKE CONCAT('%',#{gridRange},'%')
            </if>
        </where>
    </select>
    
     <resultMap id="gridBasicInfoByHouseKeeperIDMap" type="com.hypersmart.usercenter.model.GridBasicInfo">
        <id column="id" jdbcType="VARCHAR" property="id" />
        <result column="grid_code" jdbcType="VARCHAR" property="gridCode" />
        <result column="grid_name" jdbcType="VARCHAR" property="gridName" />
        <result column="grid_type" jdbcType="VARCHAR" property="gridType" />
        <result column="grid_range" jdbcType="VARCHAR" property="gridRange" />
        <result column="grid_remark" jdbcType="VARCHAR" property="gridRemark" />
        <result column="area_id" jdbcType="VARCHAR" property="areaId" />
        <result column="city_id" jdbcType="VARCHAR" property="cityId" />
        <result column="project_id" jdbcType="VARCHAR" property="projectId" />
        <result column="massif_id" jdbcType="VARCHAR" property="massifId" />
        <result column="staging_id" jdbcType="VARCHAR" property="stagingId" />
        <result column="housekeeper_id" jdbcType="VARCHAR" property="housekeeperId" />
        <result column="update_times" jdbcType="VARCHAR" property="updateTimes" />
        <result column="format_attribute" jdbcType="VARCHAR" property="formatAttribute" />
        <result column="creation_date" jdbcType="TIMESTAMP" property="creationDate" />
        <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
        <result column="enabled_flag" jdbcType="TINYINT" property="enabledFlag" />
         <collection property="ucUsers" ofType="com.hypersmart.usercenter.model.UcUser">
            <id column="ID_" property="id" javaType="java.lang.String"></id>
            <result column="FULLNAME_" property="fullname" javaType="java.lang.String"></result>
         </collection>
    </resultMap>
    <select id="getGridBasicInfoByHouseKeeperID" resultMap="gridBasicInfoByHouseKeeperIDMap" parameterType="java.util.List">
            select g.id, g.grid_code, g.grid_name, 
                   g.grid_type, g.grid_range, g.grid_remark,
                   g.area_id , g.city_id, g.project_id,
                   g.massif_id, g.staging_id, g.staging_id, 
                   g.housekeeper_id, g.update_times, g.format_attribute,
                   g.creation_date, g.created_by, g.enabled_flag,
                   u.FULLNAME_
            from uc.grid_basic_info as g left join uc.uc_user as u on g.housekeeper_id = u.ID_
            where 
            g.grid_type = 'building_grid' and g.is_deleted = 0 and g.enabled_flag = 1
            and g.staging_id in  
            <foreach collection="list" item="stagingId" open="(" separator="," close=")">
                #{stagingId}
            </foreach>
    </select>
    <select id="getServiceGridByStagingIds" resultType="java.lang.String">
        select  staging_id
        from uc.grid_basic_info
        <where>
            <if test="whereSql!=null">
                ${whereSql}
            </if>
        </where>
    </select>
    <update id="updateHousekeeperId">
        update uc.grid_basic_info set housekeeper_id=NULL ,grid_remark="" where id=#{id};
    </update>

    <select id="getByHouseId" parameterType="java.lang.String" resultType="java.util.Map">
        select 	info.id,
        grid_code as gridCode,
        grid_name AS gridName,
        grid_type as gridType,
        housekeeper_id as housekeeperId,
        a.FULLNAME_ AS housekeeperName,
        enabled_flag as enabledFlag,
        is_deleted as isDeleted
        from
        grid_basic_info info left join
        (select
        u.FULLNAME_ as  FULLNAME_,
        u.id_ as id_
        from
         uc_user u
        JOIN uc_org_user uou ON u.ID_ = uou.USER_ID_
        JOIN uc_org org ON uou.ORG_ID_ = org.ID_
        JOIN uc_org_post post ON uou.POS_ID_ = post.ID_
        JOIN uc_org_job uoj ON post.JOB_ID_ = uoj.ID_
        JOIN uc_demension dem ON org.DEM_ID_ = dem.ID_
        where
         uoj.CODE_ = 'guanjia'
        AND dem.CODE_ = 'smsf'
        AND org.GRADE_ = 'ORG_DiKuai'
        and u.IS_DELE_ = 0 and u.STATUS_ = 1 and uou.IS_DELE_ = 0 and org.IS_DELE_ = 0 and post.IS_DELE_ = 0 and uoj.IS_DELE_ = 0 and dem.IS_DELE_ = 0
        ) a on a.id_ =info.housekeeper_id
        where  grid_range LIKE CONCAT('%',#{houseId},'%')
        group by info.id limit 1
    </select>
    <select id="getByStagingId" parameterType="java.lang.String" resultType="com.hypersmart.usercenter.dto.GridBasicInfoDTO">
        SELECT
        g.id AS gridId,
        g.grid_name AS gridName,
        g.housekeeper_id AS housekeeperId,
        u.FULLNAME_ AS housekeeperName
        FROM
	    grid_basic_info g
	    LEFT JOIN uc_user u ON g.housekeeper_id = u.ID_
	    WHERE g.is_deleted = 0 AND u.IS_DELE_ = 0
        and g.staging_id IN
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="getByGridId" parameterType="java.lang.String" resultType="com.hypersmart.usercenter.dto.GridBasicInfoDTO">
        SELECT
        g.id AS gridId,
        g.grid_name AS gridName,
        g.housekeeper_id AS housekeeperId,
        u.FULLNAME_ AS housekeeperName
        FROM
        grid_basic_info g
        LEFT JOIN uc_user u ON g.housekeeper_id = u.ID_
        WHERE g.is_deleted = 0 AND u.IS_DELE_ = 0
        and g.id = #{id}
    </select>

    <select id="getListByOrgs" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
        g.id AS id,
        g.grid_name AS gridName,
        g.housekeeper_id AS housekeeperId,
        u.FULLNAME_ AS housekeeperName
        FROM
        grid_basic_info g
        LEFT JOIN uc_user u ON g.housekeeper_id = u.ID_
        WHERE g.is_deleted = 0 AND u.IS_DELE_ = 0
        and g.staging_id IN
        <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
</mapper>